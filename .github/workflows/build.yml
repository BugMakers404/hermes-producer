# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Check out the current branch
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # secrets.APPLICATION_PROPERTIES is the content instead of the path to application.properties
    - name: Create application.properties and add its path to gradle.properties
      run: |
        echo "${{ secrets.APPLICATION_PROPERTIES }}" > application.properties
        echo "hermesProducerAppProps=$(pwd)/application.properties" >> gradle.properties
        
    - name: Create container resources required by hermes-producer
      run: ./gradlew composeUp
      
    - name: Build with Gradle Wrapper
      run: ./gradlew clean build --no-daemon
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: '**/TEST-*.xml'
        
    - name: Clean up Docker resources
      if: always()
      run: ./gradlew composeDown
    
    - name: Remove Remove application.properties and gradle.properties files
      if: always()
      run: |
        rm application.properties
        rm gradle.properties
      
  test-report:
    runs-on: ubuntu-22.04
    needs: build

    steps:
    - name: Check out the current branch
      uses: actions/checkout@v3

    - name: Download test results
      uses: actions/download-artifact@v3
      with:
        name: test-results

    - name: Display test results summary
      uses: dorny/test-reporter@v1.6.0
      with:
        name: Test Results
        path: '**/TEST-*.xml'
        reporter: java-junit

    
